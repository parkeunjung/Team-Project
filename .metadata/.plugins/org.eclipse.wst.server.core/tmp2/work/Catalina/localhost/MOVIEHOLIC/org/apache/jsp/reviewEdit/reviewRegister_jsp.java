/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.56
 * Generated at: 2014-12-07 12:54:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.reviewEdit;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.File;
import java.io.IOException;
import com.oreilly.servlet.multipart.DefaultFileRenamePolicy;
import com.oreilly.servlet.MultipartRequest;
import java.util.*;
import java.sql.*;

public final class reviewRegister_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\r\n");

	Connection conn = null;
	PreparedStatement stmt = null;
	ResultSet rs = null;

	String dbUrl = "jdbc:mysql://localhost:3306/movieholic";
	String dbUser = "kbc13";;
	String dbPassword = "a12345";
	String M_name="";
	String C_name="";
	String content="";
	String imagename ="";
	String m_fileFullPath="";
	
	
	String path = application.getRealPath("/upload");
	try{
	MultipartRequest mr = new MultipartRequest(
			request, path, 1024*1024*5, "utf-8", 
			new DefaultFileRenamePolicy());
	
	M_name = mr.getParameter("M_name");
	C_name = mr.getParameter("C_name");
	content = mr.getParameter("content");		
	imagename = mr.getFilesystemName("image"); 
	m_fileFullPath = path + "/" + imagename;
    }catch(IOException e){
       out.print("<h2>IOException이 발생했습니다 <h2>");
    }
	List<String> errorMsgs = new ArrayList<String>();
	int result = 0;
	
	if (M_name == null || M_name.trim().length() == 0) {
		errorMsgs.add("영화 이름을 반드시 입력해주세요.");
	}
	if (C_name == null || C_name.trim().length() == 0) {
		errorMsgs.add("평론가명을 반드시 입력해주세요.");
	}
	if (content == null || content.trim().length() == 0) {
		errorMsgs.add("내용을 반드시 입력해주세요.");
	}
	if (imagename == null || imagename.trim().length() == 0) {
		errorMsgs.add("이미지를 반드시 첨부해주세요.");
	}
	
	if (errorMsgs.size() == 0) {
		
		try {
			conn = DriverManager.getConnection(dbUrl, dbUser, dbPassword);
			stmt = conn.prepareStatement(
					"INSERT INTO reviews(M_name,C_name,content,image,imagename) " +
					"VALUES(?, ?, ?, ?,?)"
					);
			stmt.setString(1, M_name);
			stmt.setString(2, C_name);
			stmt.setString(3, content);
			stmt.setString(4, m_fileFullPath);
			stmt.setString(5, imagename);

			result = stmt.executeUpdate();

		
			if (result != 1) {
				errorMsgs.add("등록에 실패하였습니다.");
			}
		} catch (SQLException e) {
			errorMsgs.add("SQL 에러: " + e.getMessage());
		} finally {
			// 무슨 일이 있어도 리소스를 제대로 종료
			if (rs != null) try{rs.close();} catch(SQLException e) {}
			if (stmt != null) try{stmt.close();} catch(SQLException e) {}
			if (conn != null) try{conn.close();} catch(SQLException e) {}
		}
	}

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>평론가평 등록</title>\r\n");
      out.write("\t<link href=\"../css/main.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("\t<script src=\"../js/jquery-1.8.2.min.js\"></script>\r\n");
      out.write("\t<script src=\"../js/bootstrap.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<div class=\"wrap\">\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t");
 if (errorMsgs.size() > 0) { 
      out.write("\r\n");
      out.write(" \t\t\t<div class=\"alert alert-danger\">\r\n");
      out.write(" \t\t\t\t<h3>Errors:</h3>\r\n");
      out.write(" \t\t\t\t<ul>\r\n");
      out.write(" \t\t\t\t\t");
 for(String msg: errorMsgs) { 
      out.write("\r\n");
      out.write(" \t\t\t\t\t\t<li>");
      out.print(msg );
      out.write("</li>\r\n");
      out.write(" \t\t\t\t\t");
 } 
      out.write("\r\n");
      out.write(" \t\t\t\t</ul>\r\n");
      out.write(" \t\t\t</div>\r\n");
      out.write("\t\t \t<div class=\"form-group\">\r\n");
      out.write("\t\t \t\t<a onclick=\"history.back();\" class=\"btn\">뒤로 돌아가기</a>\r\n");
      out.write("\t\t \t</div>\r\n");
      out.write("\t \t");
 } else if (result == 1) { 
      out.write("\r\n");
      out.write("\t \t\t<div class=\"alert alert-success\">\r\n");
      out.write("\t \t\t\t<b>");
      out.print( M_name );
      out.write("</b>의 평론이 등록되었습니다.\r\n");
      out.write("\t \t\t</div>\r\n");
      out.write("\t\t \t<div class=\"form-group\">\r\n");
      out.write("\t\t \t\t<a href=\"reviewList.jsp\" class=\"btn\">목록으로</a>\r\n");
      out.write("\t\t \t</div>\r\n");
      out.write("\t \t\t\r\n");
      out.write("\t \t");
}
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
